package com.white.demo.database.LoginController;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.white.demo.database.model.GameLog;
import com.white.demo.database.model.Game;
import com.white.demo.controllers.WebRedirectController;
import com.white.demo.database.model.Login;
import com.white.demo.database.Repositories.GameLogRepository;
import com.white.demo.database.Repositories.GameRepository;
import com.white.demo.database.Repositories.LoginRepository;
import java.util.List;

import java.util.Iterator;
import javax.servlet.http.HttpServletRequest;
import java.util.Date;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/login") // This means URL's start with /demo (after Application path)
public class LoginController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private LoginRepository loginRepository;
    //@Autowired
    //private LoginRepository loginRepository;
    //@Autowired
    //private GameLogRepository logRepository;
    public static String name = "";
    public static int logincount = 0;

    //Date d = new Date();


    WebRedirectController wc = new WebRedirectController();

    @RequestMapping(value="/addLogin") // Map ONLY GET Requests
    public String addNewLogin (HttpServletRequest req, @RequestParam(value = "email") String email
            ,@RequestParam(value = "password") String password) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        for (Login login : loginRepository.findAll()){
            if (login.getEmail().equals(email)){
                return "redirect:/login?signfail";
            }
        }

        Login l = new Login();
        //l.setUsername(username);
        l.setEmail(email);
        l.setPassword(password);
        this.loginRepository.save(l);
        name=email;
        return "redirect:/menu";

    }

    public String getName(){
        return name;
    }

    @RequestMapping(value="/checkLogin") // Map ONLY GET Requests
    public String checkLogin (HttpServletRequest req, @RequestParam(value = "email") String email
            ,@RequestParam(value = "password") String password) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        for (Login login : loginRepository.findAll()){
            if (login.getEmail().equals(email)){
                if (login.getPassword().equals(password)){

                    name = email;
                    return "redirect:/menu";
                }

            }
        }


        return "redirect:/login?error";

    }
    /*

    @GetMapping(path="/addLogin") // Map ONLY GET Requests
    public @ResponseBody String addNewLogin (@RequestParam String email
            , @RequestParam String username, @RequestParam String password) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request


        Login l = new Login();
        l.setUsername(username);
        l.setEmail(email);
        l.setPassword(password);
        this.loginRepository.save(l);
        return "save";

    }

    @GetMapping(path="/addGameLog") // Map ONLY GET Requests
    public @ResponseBody String addNewGameLog (@RequestParam String username, @RequestParam int game_ID,
             @RequestParam String word, @RequestParam int letterCount) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request


        GameLog l = new GameLog();
        l.setUsername(username);
        l.setGame_ID(game_ID);
        l.setDate(d.toGMTString());
        l.setWord(word);
        l.setLetterCount(letterCount);
        this.logRepository.save(l);
        return "save";

    }


    @GetMapping(path="/allLogin")
    public @ResponseBody Iterable<Login> getAllLogin() {
        // This returns a JSON or XML with the users
        return loginRepository.findAll();
    }

    @GetMapping(path="/allGameLog")
    public @ResponseBody Iterable<GameLog> getAllGameLog() {
        // This returns a JSON or XML with the users
        return logRepository.findAll();
    }
    */

    @GetMapping(path="/allLogin")
    public @ResponseBody Iterable<Login> getAllLogin() {
        // This returns a JSON or XML with the users
        return loginRepository.findAll();
    }


}